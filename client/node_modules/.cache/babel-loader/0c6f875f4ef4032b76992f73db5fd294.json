{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vadim\\\\Desktop\\\\Learn\\\\KIPO\\\\diplom\\\\imagehost\\\\client\\\\src\\\\pages\\\\ChatPage\\\\ChatPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState, useCallback, useRef } from \"react\";\nimport { Box, Typography, Button, TextField, Grid, Modal, CircularProgress, ImageList, IconButton, styled, ImageListItem, FormGroup, Container, Link, Menu, Snackbar, Alert } from \"@mui/material\";\nimport axios from \"axios\";\nimport Message from \"../../components/Message\";\nimport MessageGroup from \"../../components/MessageGroup\";\nimport { useDropzone } from \"react-dropzone\";\nimport { saveAs } from \"file-saver\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport AttachFileIcon from \"@mui/icons-material/AttachFile\";\nimport AddBoxIcon from \"@mui/icons-material/AddBox\";\nimport AddReactionIcon from \"@mui/icons-material/AddReaction\";\nimport EmojiEmotionsIcon from \"@mui/icons-material/EmojiEmotions\";\nimport { Document, Packer, Paragraph, HeadingLevel, AlignmentType } from \"docx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ICButton = styled(IconButton, CloseIcon)(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    \"&:hover\": {\n      CloseIcon: {\n        display: \"block\"\n      }\n    }\n  };\n});\n_c = ICButton;\nconst LinkStyle = {\n  textDecoration: \"none\",\n  color: \"white\"\n};\nconst modalstyle = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: {\n    xs: \"300px\",\n    sm: \"400px\"\n  },\n  borderRadius: \"5px\",\n  boxShadow: 24,\n  p: 4,\n  height: \"max-content\",\n  color: \"white\",\n  backgroundColor: \"#404040\"\n};\nconst modalstyle2 = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: {\n    xs: \"300px\",\n    sm: \"540px\"\n  },\n  borderRadius: \"5px\",\n  boxShadow: 24,\n  p: 4,\n  height: \"max-content\",\n  color: \"white\",\n  backgroundColor: \"#404040\"\n};\n\nfunction ChatPage() {\n  _s();\n\n  const [value, setValue] = React.useState(\"\");\n  const [files, setFiles] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [items, setItems] = useState([]);\n  const [room, setRoom] = useState(0);\n  const [roomGroup, setRoomGroup] = useState(0);\n  const [dialog, setDialog] = useState([]);\n  const [message, setMessage] = useState();\n  const [progress, setProgress] = useState(0);\n  const [usersId, setUsersId] = useState(0);\n  const [users, setUsers] = useState();\n  const [subs, setSubs] = useState();\n  const [isDialog, setIsDialog] = useState();\n  const [roomGrp, setRoomGrp] = useState(0);\n  const [anchorEl, setAnchorEl] = React.useState(null); // setStickers(['../Stickers/sticker.webp'])\n\n  function importAll(r) {\n    return r.keys().map(r);\n  }\n\n  const stickers = importAll(require.context(\"../../Stickers/\"));\n\n  const openStickClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const StickClose = () => {\n    setAnchorEl(null);\n  };\n\n  const ref = useRef();\n  const handleClick = useCallback(() => {\n    ref.current.value = \"\";\n  }, []);\n  const handleClick2 = useCallback(() => {\n    ref.current.value = \"\";\n  }, []);\n  const [group, setGroup] = useState();\n  const [groupM, setGroupM] = useState();\n  const [groupN, setGroupN] = useState();\n  const getStat = useCallback(async () => {\n    try {\n      await axios.get(`/api/group_chat/get_users/${roomGrp}`, {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(response => setGroup(response.data));\n    } catch (e) {\n      console.log(e);\n    }\n  });\n  useEffect(() => {\n    getStat();\n  }, [group]);\n  const getStat2 = useCallback(async () => {\n    try {\n      await axios.get(`/api/group_chat/get_message/${roomGrp}`, {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(response => setGroupM(response.data));\n    } catch (e) {\n      console.log(e);\n    }\n  });\n  useEffect(() => {\n    getStat2();\n  }, [groupM]);\n  const getStat3 = useCallback(async () => {\n    try {\n      await axios.get(`/api/group_chat/get_user_message/${roomGrp}`, {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(response => setGroupN(response.data));\n    } catch (e) {\n      console.log(e);\n    }\n  });\n  useEffect(() => {\n    getStat3();\n  }, [groupN]);\n\n  const createStatic = async (id, name) => {\n    let us = groupN.map(n => ` ${n.nickname}`);\n    setTimeout(() => {\n      try {\n        const doc = new Document({\n          sections: [{\n            children: [new Paragraph({\n              text: `Статистика по групповому чату: \"${name}\"`,\n              heading: HeadingLevel.HEADING_1,\n              alignment: AlignmentType.CENTER,\n              color: \"000000\",\n              spacing: {\n                after: 200\n              }\n            }), new Paragraph({\n              text: `Дата: ${date.toLocaleString(\"ru\", options)}`,\n              heading: HeadingLevel.HEADING_1,\n              alignment: AlignmentType.CENTER,\n              color: \"000000\",\n              spacing: {\n                after: 200\n              }\n            }), new Paragraph({\n              text: `Количество собеседников: ${group.length}`,\n              alignment: AlignmentType.LEFT,\n              color: \"000000\"\n            }), new Paragraph({\n              text: `Количество сообщений: ${groupM.length}`,\n              alignment: AlignmentType.LEFT,\n              color: \"000000\"\n            }), new Paragraph({\n              text: `Участники:${groupN.map(n => ` ${n.nickname}`)}`,\n              alignment: AlignmentType.LEFT,\n              color: \"000000\"\n            })]\n          }]\n        });\n        Packer.toBlob(doc).then(blob => {\n          saveAs(blob, \"Групповой чат.docx\");\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    }, 7000);\n  };\n\n  const [openUpload, setOpenUpload] = useState(false);\n\n  const handleOpen = () => setOpenUpload(true);\n\n  const handleClose = () => setOpenUpload(false);\n\n  const [openUpload2, setOpenUpload2] = React.useState(false);\n\n  const handleOpen2 = () => setOpenUpload2(true);\n\n  const handleClose2 = () => setOpenUpload2(false);\n\n  const {\n    userId\n  } = useContext(AuthContext);\n  const onDrop = useCallback(acceptedFiles => {\n    setFiles(acceptedFiles === null || acceptedFiles === void 0 ? void 0 : acceptedFiles.map(file => Object.assign(file, {\n      preview: URL.createObjectURL(file)\n    })));\n  }, []);\n  const {\n    getRootProps,\n    getInputProps,\n    open,\n    isDragActive,\n    isDragAccept,\n    isDragReject\n  } = useDropzone({\n    accept: \"image/jpeg, image/png, image/gif, application/pdf, application/msword, text/plain, application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n    onDrop\n  });\n  const [img, setImg] = React.useState(\"\");\n\n  const handleChange = event => {\n    setImg(event.target.value);\n  };\n\n  const RemoD = file => {\n    const newFiles = [...files];\n    newFiles.splice(newFiles.indexOf(file), 1);\n    setFiles(newFiles); // update the state\n  };\n\n  const Clear = () => {\n    setFiles([]); // update the state\n  };\n\n  const getDialog = useCallback(async () => {\n    try {\n      await axios.get(`/api/chat/get_dialog/${userId}`, {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(response => setDialog(response.data));\n    } catch (e) {\n      console.log(e);\n    }\n  });\n  useEffect(() => {\n    getDialog();\n  }, [dialog]);\n  const getGroup = useCallback(async () => {\n    try {\n      await axios.get(`/api/group_chat/get_group/${userId}`, {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(response => setRoomGroup(response.data));\n      setIsLoaded(true);\n    } catch (e) {\n      console.log(e);\n    }\n  });\n  useEffect(() => {\n    getGroup();\n  }, [roomGroup]);\n  useEffect(() => {\n    fetch(`/api/auth/get_user`).then(res => res.json()).then(result => {\n      setUsers(result);\n    }, error => {\n      console.log(error);\n    });\n  }, []);\n  useEffect(() => {\n    fetch(`/api/subscribes/get_subscribes/${userId}`).then(res => res.json()).then(result => {\n      setSubs(result);\n    }, error => {\n      console.log(error);\n    });\n  }, []);\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setProgress(prevProgress => prevProgress >= 100 ? 0 : prevProgress + 10);\n    }, 800);\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n  var options = {\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\",\n    timezone: \"UTC\",\n    hour: \"numeric\",\n    minute: \"numeric\",\n    second: \"numeric\"\n  };\n  var date = new Date();\n  const [form, setForm] = useState({\n    user_from_id: userId,\n    user_to_id: \"\",\n    dialog_id: room,\n    message: \"\",\n    date_publication: date.toLocaleString(\"ru\", options),\n    search: \"\",\n    group_id: roomGrp,\n    stickers: \"\",\n    isActivity: \"\"\n  });\n\n  const openChat = (roomId, userId) => {\n    setRoom(roomId);\n    setRoomGrp(0);\n    setUsersId(userId);\n    setIsDialog(true);\n  };\n\n  const openChatGroup = (roomId, userId) => {\n    setRoomGrp(roomId);\n    setIsDialog(false);\n  };\n\n  const changeHandler = event => {\n    setForm({ ...form,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const changeHandlerClear = event => {\n    setForm({ ...form,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const sendMessage = async () => {\n    form.dialog_id = room;\n    form.user_to_id = dialog.find(item => item.id === room).user_to_id;\n    sendNotify();\n\n    if (files.length === 0) {\n      try {\n        await axios.post(\"/api/chat/create_message\", { ...form\n        }, {\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    } else createImage();\n  };\n\n  const sendNotify = async () => {\n    form.dialog_id = room;\n    form.user_to_id = dialog.find(item => item.id === room).user_from_id === userId ? dialog.find(item => item.id === room).user_to_id : dialog.find(item => item.id === room).user_from_id;\n    form.isActivity = 0;\n    console.log(dialog.find(item => item.id === room).user_from_id === userId ? dialog.find(item => item.id === room).user_to_id : dialog.find(item => item.id === room).user_from_id);\n\n    try {\n      await axios.post(\"/api/notify/create_notify\", { ...form\n      }, {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const createImage = async () => {\n    let formData = new FormData();\n    files === null || files === void 0 ? void 0 : files.map(item => {\n      formData.append(\"image\", item);\n      formData.append(\"id\", userId);\n    });\n    formData.append(\"dialog_id\", room);\n    formData.append(\"user_to_id\", dialog.find(item => item.id === room).user_to_id);\n    formData.append(\"user_from_id\", userId);\n    formData.append(\"message\", form.message);\n    formData.append(\"date_publication\", form.date_publication);\n\n    try {\n      axios.post(`/api/chat/create_message_and_image`, formData, {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      Clear();\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const createStickerImage = async ref => {\n    form.dialog_id = room;\n    form.user_to_id = dialog.find(item => item.id === room).user_to_id;\n    form.stickers = ref;\n\n    if (files.length === 0) {\n      try {\n        await axios.post(\"/api/chat/create_sticker\", { ...form\n        }, {\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    } else createImage();\n  };\n\n  const createStickerGroup = async ref => {\n    form.group_id = roomGrp;\n    form.user_from_id = userId;\n    form.stickers = ref;\n\n    if (files.length === 0) {\n      try {\n        await axios.post(\"/api/group_chat/create_sticker\", { ...form\n        }, {\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    } else createImage();\n  };\n\n  const sendMessageGroup = async () => {\n    form.group_id = roomGrp;\n    form.user_from_id = userId;\n\n    if (files.length === 0) {\n      try {\n        await axios.post(\"/api/group_chat/create_message\", { ...form\n        }, {\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    } else createImageGroup();\n  };\n\n  const onKeyDown = useCallback(e => {\n    if (e.keyCode === 13) {\n      sendMessage();\n      handleClick();\n    }\n  }, [sendMessage, handleClick]);\n  const onKeyDownGroup = useCallback(e => {\n    if (e.keyCode === 13) {\n      sendMessageGroup();\n      handleClick2();\n    }\n  }, [sendMessageGroup, handleClick2]);\n\n  const createImageGroup = async () => {\n    let formData = new FormData();\n    files === null || files === void 0 ? void 0 : files.map(item => {\n      formData.append(\"image\", item);\n      formData.append(\"id\", userId);\n    });\n    formData.append(\"group_id\", roomGrp);\n    formData.append(\"user_from_id\", userId);\n    formData.append(\"message\", form.message);\n    formData.append(\"date_publication\", form.date_publication);\n\n    try {\n      axios.post(`/api/group_chat/create_message_and_image`, formData, {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      Clear();\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const createGroup = async () => {\n    setOpenUpload(false);\n\n    try {\n      await axios.post(\"/api/group_chat/create_group\", { ...form\n      }, {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const [userData, setUserData] = useState({\n    user_id: \"\",\n    group_id: roomGrp\n  });\n\n  const inviteUser = async usr => {\n    userData.user_id = usr;\n    userData.group_id = roomGrp;\n\n    try {\n      await axios.post(\"/api/group_chat/add_user\", { ...userData\n      }, {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const [openAlert, setOpenAlert] = React.useState(false);\n\n  const handleClickAlert = (g, n) => {\n    setOpenAlert(true);\n    setTimeout(() => {\n      createStatic(g, n);\n    }, 3000);\n  };\n\n  const handleCloseAlert = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpenAlert(false);\n  };\n\n  const action = /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(IconButton, {\n      size: \"small\",\n      \"aria-label\": \"close\",\n      color: \"inherit\",\n      onClick: handleClose,\n      children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n        fontSize: \"small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 669,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 663,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 662,\n    columnNumber: 5\n  }, this);\n\n  return !isLoaded ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n    variant: \"determinate\",\n    value: progress\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 675,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Snackbar, {\n      open: openAlert,\n      autoHideDuration: 6000,\n      onClose: handleCloseAlert,\n      message: \" \\u0413\\u0435\\u043D\\u0435\\u0440\\u0430\\u0446\\u0438\\u044F \\u0441\\u0442\\u0430\\u0442\\u0438\\u0441\\u0442\\u0438\\u043A\\u0438\",\n      action: action,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleCloseAlert,\n        severity: \"success\",\n        sx: {\n          width: \"100%\"\n        },\n        children: \"\\u0413\\u0435\\u043D\\u0435\\u0440\\u0430\\u0446\\u0438\\u044F \\u0441\\u0442\\u0430\\u0442\\u0438\\u0441\\u0442\\u0438\\u043A\\u0438, \\u043F\\u043E\\u0436\\u0430\\u043B\\u0443\\u0439\\u0441\\u0442\\u0430 \\u043F\\u043E\\u0434\\u043E\\u0436\\u0434\\u0438\\u0442\\u0435\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 685,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 678,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: openUpload,\n      onClose: handleClose,\n      sx: {\n        background: \"linear-gradient(34deg, rgb(126 139 255 / 70%) 0%, rgb(255 255 255 / 70%) 100%)\",\n        color: \"#7e8bff\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: modalstyle,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          sx: {\n            width: \"400px\",\n            height: \"auto\",\n            flexDirection: \"column\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              sx: {\n                fontSize: \"18px\",\n                fontWeight: \"600\",\n                mb: \"5px\"\n              },\n              children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u043D\\u0438\\u0435 \\u0433\\u0440\\u0443\\u043F\\u043F\\u044B\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 712,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              multiline: true,\n              rows: 1,\n              placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\",\n              name: \"name_chat\",\n              onChange: changeHandler,\n              sx: {\n                border: \"none\",\n                outline: \"none\",\n                reSize: \"none\",\n                backgroundColor: \"#323232\",\n                color: \"#fff\",\n                width: {\n                  xs: \"300px\",\n                  sm: \"100%\"\n                },\n                fontSize: \"100%\",\n                height: \"auto\",\n                borderRadius: \"0px\",\n                \".MuiOutlinedInput-root\": {\n                  borderRadius: \"0px\",\n                  borderColor: \"rgb(0 0 0 / 0%)\",\n                  color: \"white\"\n                },\n                \".MuiOutlinedInput-notchedOutline\": {\n                  borderRadius: \"0px\",\n                  borderColor: \"rgb(0 0 0 / 0%)\"\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 717,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              sx: {\n                p: 0,\n                height: \"40px\",\n                textAlign: \"center\",\n                boxShadow: \"1px 1px 5px 0px black\",\n                m: {\n                  xs: \"10px 20px 0px 120px\",\n                  sm: \"10px 20px 0px 170px\"\n                }\n              },\n              variant: \"contained\",\n              component: \"span\",\n              color: \"secondary\",\n              type: \"button\",\n              onClick: createGroup,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"span\",\n                sx: {\n                  color: \"white\",\n                  fontSize: 13,\n                  p: \"5px\",\n                  borderRadius: 2\n                },\n                children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 766,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 749,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 711,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 703,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 702,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 693,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: openUpload2,\n      onClose: handleClose2,\n      sx: {\n        background: \"linear-gradient(34deg, rgb(126 139 255 / 70%) 0%, rgb(255 255 255 / 70%) 100%)\",\n        color: \"#7e8bff\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: modalstyle2,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          sx: {\n            width: {\n              xs: \"300px\",\n              sm: \"540px\"\n            },\n            height: \"auto\",\n            flexDirection: \"column\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0443\\u0447\\u0430\\u0441\\u0442\\u043D\\u0438\\u043A\\u0430\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 805,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              multiline: true,\n              rows: 1,\n              placeholder: \"\\u041D\\u0438\\u043A\\u043D\\u0435\\u0439\\u043C\",\n              name: \"search\",\n              onChange: changeHandler,\n              sx: {\n                border: \"none\",\n                outline: \"none\",\n                reSize: \"none\",\n                backgroundColor: \"#323232\",\n                color: \"#fff\",\n                width: {\n                  xs: \"300px\",\n                  sm: \"100%\"\n                },\n                fontSize: \"100%\",\n                height: \"auto\",\n                borderRadius: \"0px\",\n                \".MuiOutlinedInput-root\": {\n                  borderRadius: \"0px\",\n                  borderColor: \"rgb(0 0 0 / 0%)\",\n                  color: \"white\"\n                },\n                \".MuiOutlinedInput-notchedOutline\": {\n                  borderRadius: \"0px\",\n                  borderColor: \"rgb(0 0 0 / 0%)\"\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 806,\n              columnNumber: 15\n            }, this), users === null || users === void 0 ? void 0 : users.map(i => {\n              var _i$nickname;\n\n              return form.search != \"\" ? ~((_i$nickname = i.nickname) === null || _i$nickname === void 0 ? void 0 : _i$nickname.indexOf(form.search)) ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  sx: {\n                    display: \"flex\",\n                    fontWeight: 400,\n                    fontSize: \"18px\",\n                    alignItems: \"center\",\n                    color: \"white\",\n                    my: \"18px\",\n                    width: \"max-content\",\n                    flexDirection: \"column\",\n                    \"a:-webkit-any-link\": {\n                      textDecoration: \"none\",\n                      color: \"white\"\n                    }\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Grid, {\n                    container: true,\n                    sx: {\n                      alignItems: \"center\"\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      sx: {\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        width: {\n                          xs: \"150px\",\n                          sm: \"250px\"\n                        }\n                      },\n                      children: /*#__PURE__*/_jsxDEV(Link, {\n                        style: LinkStyle,\n                        to: `/user/${i.user_id}`,\n                        children: i.nickname\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 869,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 858,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      sx: {\n                        height: \"35px\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(Button, {\n                        sx: {\n                          p: 0,\n                          ml: {\n                            xs: \"50px\",\n                            sm: \"195px\"\n                          },\n                          height: \"40px\",\n                          textAlign: \"center\",\n                          boxShadow: \"1px 1px 5px 0px black\"\n                        },\n                        variant: \"contained\",\n                        component: \"span\",\n                        color: \"secondary\",\n                        type: \"button\",\n                        onClick: () => inviteUser(i.id),\n                        children: /*#__PURE__*/_jsxDEV(Typography, {\n                          variant: \"span\",\n                          sx: {\n                            color: \"white\",\n                            fontSize: 13,\n                            p: \"5px\",\n                            borderRadius: 2\n                          },\n                          children: \"\\u041F\\u0440\\u0438\\u0433\\u043B\\u0430\\u0441\\u0438\\u0442\\u044C\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 891,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 874,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 873,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 857,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 841,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false) : null : null;\n            }), subs === null || subs === void 0 ? void 0 : subs.map(i => users === null || users === void 0 ? void 0 : users.map(usr => usr.id === i.subscribes_id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                sx: {\n                  display: \"flex\",\n                  fontWeight: 400,\n                  fontSize: \"18px\",\n                  alignItems: \"center\",\n                  color: \"white\",\n                  my: \"18px\",\n                  width: \"max-content\",\n                  flexDirection: \"column\",\n                  \"a:-webkit-any-link\": {\n                    textDecoration: \"none\",\n                    color: \"white\"\n                  }\n                },\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  sx: {\n                    alignItems: \"center\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    sx: {\n                      display: \"flex\",\n                      alignItems: \"center\",\n                      width: {\n                        xs: \"150px\",\n                        sm: \"250px\"\n                      }\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Link, {\n                      style: LinkStyle,\n                      to: `/user/${i.user_id}`,\n                      children: usr.nickname\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 943,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 932,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    sx: {\n                      height: \"35px\"\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      sx: {\n                        p: 0,\n                        ml: {\n                          xs: \"50px\",\n                          sm: \"195px\"\n                        },\n                        height: \"40px\",\n                        textAlign: \"center\",\n                        boxShadow: \"1px 1px 5px 0px black\"\n                      },\n                      variant: \"contained\",\n                      component: \"span\",\n                      color: \"secondary\",\n                      type: \"button\",\n                      onClick: () => inviteUser(usr.id),\n                      children: /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"span\",\n                        sx: {\n                          color: \"white\",\n                          fontSize: 13,\n                          p: \"5px\",\n                          borderRadius: 2\n                        },\n                        children: \"\\u041F\\u0440\\u0438\\u0433\\u043B\\u0430\\u0441\\u0438\\u0442\\u044C\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 965,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 948,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 947,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 931,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 915,\n                columnNumber: 23\n              }, this)\n            }, void 0, false) : null))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 804,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 793,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 792,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 783,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      container: true,\n      id: \"msg_container\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        sx: {\n          ml: {\n            xs: \"0px\",\n            sm: \"260px\"\n          },\n          mt: {\n            xs: \"55px\",\n            sm: \"100px\"\n          },\n          width: \"1500px\",\n          height: \"50px\",\n          flexDirection: \"row\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sx: {\n            backgroundColor: \"#2e3035\",\n            borderRight: \"1px solid #232326\",\n            height: \"100%\",\n            flex: \"0 1 55px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            sx: {\n              display: \"flex\",\n              width: {\n                xs: \"130px\",\n                sm: \"465px\"\n              },\n              borderBottom: \"1px solid #232326\",\n              height: \"50px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              sx: {\n                height: \"100%\",\n                color: \"white\",\n                width: \"425px\",\n                mt: \"15px\",\n                textAlign: \"center\"\n              },\n              children: \"\\u0414\\u0438\\u0430\\u043B\\u043E\\u0433\\u0438\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1027,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              sx: {\n                minWidth: \"30px\"\n              },\n              onClick: () => handleOpen(),\n              children: /*#__PURE__*/_jsxDEV(AddBoxIcon, {\n                sx: {\n                  fontSize: \"35px\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1040,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1039,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1015,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1006,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sx: {\n            backgroundColor: \"#2e3035\",\n            borderBottom: \"1px solid #232326\",\n            borderRight: \"1px solid #232326\",\n            padding: \"0 20px\",\n            height: \"100%\",\n            flex: \"0 1 55px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              sx: {\n                height: \"100%\",\n                color: \"white\",\n                width: {\n                  xs: \"220px\",\n                  sm: \"893px\"\n                },\n                m: \"13px 0px\"\n              },\n              children: roomGrp ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: roomGroup === null || roomGroup === void 0 ? void 0 : roomGroup.map(i => i.group_id === roomGrp ? /*#__PURE__*/_jsxDEV(Typography, {\n                  sx: {\n                    height: \"100%\",\n                    mt: \"15px\",\n                    color: \"white\",\n                    m: \"-13px 0px\"\n                  } //onClick={() => openChatGroup(i.group_id, userId)}\n                  ,\n                  children: [i.name_chat, /*#__PURE__*/_jsxDEV(Button, {\n                    sx: {\n                      minWidth: \"30px\",\n                      ml: \"5px\"\n                    },\n                    onClick: () => handleOpen2(),\n                    children: /*#__PURE__*/_jsxDEV(AddReactionIcon, {\n                      sx: {\n                        fontSize: \"35px\"\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1085,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1081,\n                    columnNumber: 27\n                  }, this), group.length === 0 ? null : groupM.length === 0 ? null : groupN.length === 0 ? null : /*#__PURE__*/_jsxDEV(Button, {\n                    sx: {\n                      minWidth: \"30px\",\n                      ml: \"5px\"\n                    },\n                    onClick: () => handleClickAlert(i.group_id, i.name_chat),\n                    children: \"\\u0421\\u0442\\u0430\\u0442\\u0438\\u0441\\u0442\\u0438\\u043A\\u0430\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1089,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1071,\n                  columnNumber: 25\n                }, this) : null)\n              }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: users === null || users === void 0 ? void 0 : users.map(usr => usr.id === usersId ? /*#__PURE__*/_jsxDEV(Typography, {\n                  sx: {\n                    color: \"white\",\n                    display: \"inline-block\"\n                  },\n                  children: usr.nickname\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1106,\n                  columnNumber: 25\n                }, this) : null)\n              }, void 0, false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1056,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1055,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1044,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 990,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        id: \"msg_list\",\n        sx: {\n          margin: \"0px auto 0 -700px\",\n          width: {\n            xs: \"392px\",\n            sm: \"1398px\"\n          },\n          position: \"absolute\",\n          right: \"auto\",\n          ml: {\n            xs: \"0px\",\n            sm: \"260px\"\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sx: {\n            backgroundColor: \"#212124\",\n            height: \"100%\",\n            width: \"80px\",\n            float: \"left\",\n            display: \"flex\",\n            flexFlow: \"column\",\n            top: \"0\",\n            right: \"0\"\n          },\n          xs: 4,\n          children: [dialog === null || dialog === void 0 ? void 0 : dialog.map(item => users === null || users === void 0 ? void 0 : users.map(usr => usr.id === item.user_to_id && usr.id != userId ? /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              backgroundColor: \"#2e3035\",\n              borderBottom: \"1px solid #232326\",\n              borderRight: \"1px solid #232326\",\n              padding: \"0 20px\",\n              height: \"auto\",\n              flex: \"0 1 55px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              sx: {\n                height: \"100%\",\n                mt: \"15px\",\n                color: \"white\"\n              },\n              onClick: () => openChat(item.id, usr.id),\n              children: usr.nickname\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1163,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1153,\n            columnNumber: 19\n          }, this) : null)), roomGroup === null || roomGroup === void 0 ? void 0 : roomGroup.map(i => /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              backgroundColor: \"#2e3035\",\n              borderBottom: \"1px solid #232326\",\n              borderRight: \"1px solid #232326\",\n              padding: \"0 20px\",\n              height: \"auto\",\n              flex: \"0 1 55px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              sx: {\n                height: \"100%\",\n                mt: \"15px\",\n                color: \"white\"\n              },\n              onClick: () => openChatGroup(i.group_id, userId),\n              children: i.name_chat\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1185,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1175,\n            columnNumber: 15\n          }, this)), dialog === null || dialog === void 0 ? void 0 : dialog.map(item => users === null || users === void 0 ? void 0 : users.map(usr => usr.id === item.user_from_id && usr.id != userId ? /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              backgroundColor: \"#2e3035\",\n              borderBottom: \"1px solid #232326\",\n              borderRight: \"1px solid #232326\",\n              padding: \"0 20px\",\n              height: \"auto\",\n              flex: \"0 1 55px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              sx: {\n                height: \"100%\",\n                mt: \"15px\",\n                color: \"white\"\n              },\n              onClick: () => openChat(item.id, usr.id),\n              children: usr.nickname\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1207,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1197,\n            columnNumber: 19\n          }, this) : null))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1136,\n          columnNumber: 11\n        }, this), isDialog ? /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 8,\n          sx: {\n            backgroundColor: \"#E1E1E1\",\n            height: {\n              xs: \"650px\",\n              sm: \"810px\"\n            }\n          },\n          children: room === 0 ? null : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              sx: {\n                position: \"relative\",\n                boxSizing: \"border-box\",\n                height: {\n                  xs: \"624px\",\n                  sm: \"744px\"\n                },\n                overflowY: \"auto\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Message, {\n                todo: room\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1244,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1232,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Container, {\n              sx: {\n                width: \"100%\",\n                backgroundColor: {\n                  xs: \"#dddddd\",\n                  sm: \"#c3c3c38f\"\n                },\n                display: \"inline-block\",\n                height: \"auto\"\n              },\n              children: files.map(file => /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                sx: {\n                  width: \"max-content\",\n                  display: \"inline-block\",\n                  ml: \"10px\",\n                  height: \"auto\",\n                  pt: \"8px\",\n                  pb: \"4px\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  width: 50,\n                  height: 50,\n                  src: file.preview\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1270,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(ICButton, {\n                  onClick: () => RemoD(file),\n                  sx: {\n                    p: 0,\n                    ml: \"-12px\",\n                    mt: \"-90px\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n                    sx: {\n                      fill: \"red\",\n                      verticalAlign: \"middle\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1276,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1272,\n                  columnNumber: 25\n                }, this)]\n              }, file.path, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1258,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1246,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                sx: {\n                  display: \"flex\",\n                  height: \"55px\",\n                  justifyContent: \"center\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(TextField, {\n                  multiline: true,\n                  rows: 1,\n                  placeholder: \"\\u041D\\u0430\\u043F\\u0438\\u0441\\u0430\\u0442\\u044C..\",\n                  name: \"message\",\n                  onChange: changeHandler,\n                  inputRef: ref,\n                  onKeyDown: onKeyDown,\n                  sx: {\n                    border: \"none\",\n                    outline: \"none\",\n                    reSize: \"none\",\n                    backgroundColor: \"#323232\",\n                    color: \"#fff\",\n                    width: \"100%\",\n                    fontSize: \"100%\",\n                    height: \"auto\",\n                    borderRadius: \"0px\",\n                    \".MuiOutlinedInput-root\": {\n                      borderRadius: \"0px\",\n                      borderColor: \"rgb(0 0 0 / 0%)\",\n                      color: \"white\"\n                    },\n                    \".MuiOutlinedInput-notchedOutline\": {\n                      borderRadius: \"0px\",\n                      borderColor: \"rgb(0 0 0 / 0%)\"\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1291,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"file\",\n                  hidden: true,\n                  name: \"image\",\n                  id: \"file\",\n                  accept: \"image/gif , image/png , image/jpeg\",\n                  ...getInputProps()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1322,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  sx: {\n                    height: \"36px\",\n                    width: \"41px\",\n                    minWidth: \"40px\",\n                    textAlign: \"center\",\n                    position: \"absolute\",\n                    right: \"0\",\n                    mr: {\n                      xs: \"120px\",\n                      sm: \"150px\"\n                    },\n                    zIndex: 2\n                  },\n                  variant: \"contained\",\n                  component: \"span\",\n                  \"aria-haspopup\": \"true\",\n                  onClick: openStickClick,\n                  children: /*#__PURE__*/_jsxDEV(EmojiEmotionsIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1349,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1330,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Menu, {\n                  elevation: 0,\n                  getContentAnchorEl: null,\n                  anchorOrigin: {\n                    vertical: \"bottom\",\n                    horizontal: \"center\"\n                  },\n                  transformOrigin: {\n                    vertical: \"top\",\n                    horizontal: \"center\"\n                  },\n                  id: \"customized-menu\",\n                  anchorEl: anchorEl,\n                  keepMounted: true,\n                  open: Boolean(anchorEl),\n                  onClose: StickClose,\n                  sx: {\n                    \".MuiMenu-list\": {\n                      background: \"#000000ed\"\n                    }\n                  },\n                  children: /*#__PURE__*/_jsxDEV(ImageList, {\n                    sx: {\n                      width: 365,\n                      height: 450,\n                      justifyItems: \"center\",\n                      \"&::-webkit-scrollbar\": {\n                        width: 5,\n                        borderRadius: \"5px\"\n                      },\n                      \"&::-webkit-scrollbar-thumb\": {\n                        backgroundColor: \"rgb(112 112 112)\",\n                        outline: \"1px solid black\",\n                        borderRadius: \"5px\"\n                      }\n                    },\n                    cols: 3,\n                    rowHeight: 100,\n                    colWidth: 100,\n                    children: stickers.map(item => /*#__PURE__*/_jsxDEV(ImageListItem, {\n                      children: /*#__PURE__*/_jsxDEV(Box, {\n                        component: \"img\",\n                        a: true,\n                        onClick: () => createStickerImage(item.slice(21, 23)),\n                        sx: {\n                          objectFit: \"contain\",\n                          height: \"100px\",\n                          display: \"inline-block\",\n                          maxWidth: 100,\n                          width: \"100px\",\n                          overflow: \"hidden\"\n                        },\n                        src: `${item}?fit=cover&auto=format`,\n                        alt: item\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1390,\n                        columnNumber: 31\n                      }, this)\n                    }, item.img, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1389,\n                      columnNumber: 29\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1369,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1351,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  sx: {\n                    height: \"36px\",\n                    width: \"41px\",\n                    minWidth: \"40px\",\n                    textAlign: \"center\",\n                    position: \"absolute\",\n                    right: \"0\",\n                    mr: {\n                      xs: \"77px\",\n                      sm: \"100px\"\n                    },\n                    zIndex: 2\n                  },\n                  variant: \"contained\",\n                  component: \"span\",\n                  rows: 1,\n                  onClick: open,\n                  children: /*#__PURE__*/_jsxDEV(AttachFileIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1430,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1411,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  component: \"span\",\n                  color: \"secondary\",\n                  onClick: () => {\n                    sendMessage();\n                    handleClick();\n                  },\n                  sx: {\n                    height: \"36px\",\n                    width: \"71px\",\n                    textAlign: \"center\",\n                    position: \"absolute\",\n                    right: \"0\",\n                    mr: {\n                      xs: \"4px\",\n                      sm: \"16px\"\n                    }\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    sx: {\n                      fontSize: \"12px\",\n                      lineHeight: \"12px\",\n                      textTransform: \"capitalize\"\n                    },\n                    children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1452,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1432,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1284,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1283,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1219,\n          columnNumber: 13\n        }, this) :\n        /*#__PURE__*/\n        //Групповушка\n        _jsxDEV(Grid, {\n          item: true,\n          xs: 8,\n          sx: {\n            backgroundColor: \"#E1E1E1\",\n            height: {\n              xs: \"650px\",\n              sm: \"810px\"\n            }\n          },\n          children: roomGrp === 0 ? null : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              sx: {\n                position: \"relative\",\n                boxSizing: \"border-box\",\n                height: {\n                  xs: \"624px\",\n                  sm: \"744px\"\n                },\n                overflowY: \"auto\"\n              },\n              children: /*#__PURE__*/_jsxDEV(MessageGroup, {\n                todo: roomGrp\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1494,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1482,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Container, {\n              sx: {\n                width: \"100%\",\n                backgroundColor: {\n                  xs: \"#dddddd\",\n                  sm: \"#c3c3c38f\"\n                },\n                display: \"inline-block\",\n                height: \"auto\"\n              },\n              children: files.map(file => /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                sx: {\n                  width: \"max-content\",\n                  display: \"inline-block\",\n                  ml: \"10px\",\n                  height: \"auto\",\n                  pt: \"8px\",\n                  pb: \"4px\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  width: 50,\n                  height: 50,\n                  src: file.preview\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1520,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(ICButton, {\n                  onClick: () => RemoD(file),\n                  sx: {\n                    p: 0,\n                    ml: \"-12px\",\n                    mt: \"-90px\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n                    sx: {\n                      fill: \"red\",\n                      verticalAlign: \"middle\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1526,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1522,\n                  columnNumber: 25\n                }, this)]\n              }, file.path, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1508,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1496,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                sx: {\n                  display: \"flex\",\n                  height: \"55px\",\n                  justifyContent: \"center\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(TextField, {\n                  multiline: true,\n                  rows: 1,\n                  placeholder: \"\\u041D\\u0430\\u043F\\u0438\\u0441\\u0430\\u0442\\u044C..\",\n                  name: \"message\",\n                  onChange: changeHandler,\n                  inputRef: ref,\n                  onKeyDown: onKeyDownGroup,\n                  sx: {\n                    border: \"none\",\n                    outline: \"none\",\n                    reSize: \"none\",\n                    backgroundColor: \"#323232\",\n                    color: \"#fff\",\n                    width: \"100%\",\n                    fontSize: \"100%\",\n                    height: \"auto\",\n                    borderRadius: \"0px\",\n                    \".MuiOutlinedInput-root\": {\n                      borderRadius: \"0px\",\n                      borderColor: \"rgb(0 0 0 / 0%)\",\n                      color: \"white\"\n                    },\n                    \".MuiOutlinedInput-notchedOutline\": {\n                      borderRadius: \"0px\",\n                      borderColor: \"rgb(0 0 0 / 0%)\"\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1541,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"file\",\n                  hidden: true,\n                  name: \"image\",\n                  id: \"file\",\n                  accept: \"image/gif , image/png , image/jpeg\",\n                  ...getInputProps()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1572,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  sx: {\n                    height: \"36px\",\n                    width: \"41px\",\n                    minWidth: \"40px\",\n                    textAlign: \"center\",\n                    position: \"absolute\",\n                    right: \"0\",\n                    mr: {\n                      xs: \"120px\",\n                      sm: \"150px\"\n                    },\n                    zIndex: 2\n                  },\n                  variant: \"contained\",\n                  component: \"span\",\n                  \"aria-haspopup\": \"true\",\n                  onClick: openStickClick,\n                  children: /*#__PURE__*/_jsxDEV(EmojiEmotionsIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1599,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1580,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Menu, {\n                  elevation: 0,\n                  getContentAnchorEl: null,\n                  anchorOrigin: {\n                    vertical: \"bottom\",\n                    horizontal: \"center\"\n                  },\n                  transformOrigin: {\n                    vertical: \"top\",\n                    horizontal: \"center\"\n                  },\n                  id: \"customized-menu\",\n                  anchorEl: anchorEl,\n                  keepMounted: true,\n                  open: Boolean(anchorEl),\n                  onClose: StickClose,\n                  sx: {\n                    \".MuiMenu-list\": {\n                      background: \"#000000ed\"\n                    }\n                  },\n                  children: /*#__PURE__*/_jsxDEV(ImageList, {\n                    sx: {\n                      width: 365,\n                      height: 450,\n                      justifyItems: \"center\",\n                      \"&::-webkit-scrollbar\": {\n                        width: 5,\n                        borderRadius: \"5px\"\n                      },\n                      \"&::-webkit-scrollbar-thumb\": {\n                        backgroundColor: \"rgb(112 112 112)\",\n                        outline: \"1px solid black\",\n                        borderRadius: \"5px\"\n                      }\n                    },\n                    cols: 3,\n                    rowHeight: 100,\n                    colWidth: 100,\n                    children: stickers.map(item => /*#__PURE__*/_jsxDEV(ImageListItem, {\n                      children: /*#__PURE__*/_jsxDEV(Box, {\n                        onClick: () => createStickerGroup(item.slice(21, 23)),\n                        component: \"img\",\n                        a: true,\n                        sx: {\n                          objectFit: \"contain\",\n                          height: \"100px\",\n                          display: \"inline-block\",\n                          maxWidth: 100,\n                          width: \"100px\",\n                          overflow: \"hidden\"\n                        },\n                        src: `${item}?fit=cover&auto=format`,\n                        alt: item\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1640,\n                        columnNumber: 31\n                      }, this)\n                    }, item.img, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1639,\n                      columnNumber: 29\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1619,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1601,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  sx: {\n                    height: \"36px\",\n                    width: \"41px\",\n                    minWidth: \"40px\",\n                    textAlign: \"center\",\n                    position: \"absolute\",\n                    right: \"0\",\n                    mr: {\n                      xs: \"77px\",\n                      sm: \"100px\"\n                    },\n                    zIndex: 2\n                  },\n                  variant: \"contained\",\n                  component: \"span\",\n                  rows: 1,\n                  onClick: open,\n                  children: /*#__PURE__*/_jsxDEV(AttachFileIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1680,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1661,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  component: \"span\",\n                  color: \"secondary\",\n                  onClick: () => {\n                    sendMessageGroup();\n                    handleClick2();\n                  },\n                  sx: {\n                    height: \"36px\",\n                    width: \"71px\",\n                    textAlign: \"center\",\n                    position: \"absolute\",\n                    right: \"0\",\n                    mr: {\n                      xs: \"4px\",\n                      sm: \"16px\"\n                    }\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    sx: {\n                      fontSize: \"12px\",\n                      lineHeight: \"12px\",\n                      textTransform: \"capitalize\"\n                    },\n                    children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1702,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1682,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1534,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1533,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1469,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 989,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ChatPage, \"KrLmTMrsq7E1hKWpHgOm7asRGko=\", false, function () {\n  return [useDropzone];\n});\n\n_c2 = ChatPage;\nexport default ChatPage; //  {\n//    message.map((item) =>\n//       item.user_from_id == userId ? (<h1>{item.message}</h1>) : (<h3>{item.message}</h3>)\n//    )\n//}\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ICButton\");\n$RefreshReg$(_c2, \"ChatPage\");","map":{"version":3,"names":["React","useContext","useEffect","useState","useCallback","useRef","Box","Typography","Button","TextField","Grid","Modal","CircularProgress","ImageList","IconButton","styled","ImageListItem","FormGroup","Container","Link","Menu","Snackbar","Alert","axios","Message","MessageGroup","useDropzone","saveAs","AuthContext","CloseIcon","AttachFileIcon","AddBoxIcon","AddReactionIcon","EmojiEmotionsIcon","Document","Packer","Paragraph","HeadingLevel","AlignmentType","ICButton","theme","display","LinkStyle","textDecoration","color","modalstyle","position","top","left","transform","width","xs","sm","borderRadius","boxShadow","p","height","backgroundColor","modalstyle2","ChatPage","value","setValue","files","setFiles","isLoaded","setIsLoaded","items","setItems","room","setRoom","roomGroup","setRoomGroup","dialog","setDialog","message","setMessage","progress","setProgress","usersId","setUsersId","users","setUsers","subs","setSubs","isDialog","setIsDialog","roomGrp","setRoomGrp","anchorEl","setAnchorEl","importAll","r","keys","map","stickers","require","context","openStickClick","event","currentTarget","StickClose","ref","handleClick","current","handleClick2","group","setGroup","groupM","setGroupM","groupN","setGroupN","getStat","get","headers","then","response","data","e","console","log","getStat2","getStat3","createStatic","id","name","us","n","nickname","setTimeout","doc","sections","children","text","heading","HEADING_1","alignment","CENTER","spacing","after","date","toLocaleString","options","length","LEFT","toBlob","blob","error","openUpload","setOpenUpload","handleOpen","handleClose","openUpload2","setOpenUpload2","handleOpen2","handleClose2","userId","onDrop","acceptedFiles","file","Object","assign","preview","URL","createObjectURL","getRootProps","getInputProps","open","isDragActive","isDragAccept","isDragReject","accept","img","setImg","handleChange","target","RemoD","newFiles","splice","indexOf","Clear","getDialog","getGroup","fetch","res","json","result","timer","setInterval","prevProgress","clearInterval","year","month","day","timezone","hour","minute","second","Date","form","setForm","user_from_id","user_to_id","dialog_id","date_publication","search","group_id","isActivity","openChat","roomId","openChatGroup","changeHandler","changeHandlerClear","sendMessage","find","item","sendNotify","post","createImage","formData","FormData","append","createStickerImage","createStickerGroup","sendMessageGroup","createImageGroup","onKeyDown","keyCode","onKeyDownGroup","createGroup","userData","setUserData","user_id","inviteUser","usr","openAlert","setOpenAlert","handleClickAlert","g","handleCloseAlert","reason","action","background","flexDirection","fontSize","fontWeight","mb","border","outline","reSize","borderColor","textAlign","m","i","alignItems","my","ml","subscribes_id","mt","borderRight","flex","borderBottom","minWidth","padding","name_chat","margin","right","float","flexFlow","boxSizing","overflowY","pt","pb","fill","verticalAlign","path","justifyContent","mr","zIndex","vertical","horizontal","Boolean","justifyItems","slice","objectFit","maxWidth","overflow","lineHeight","textTransform"],"sources":["C:/Users/Vadim/Desktop/Learn/KIPO/diplom/imagehost/client/src/pages/ChatPage/ChatPage.jsx"],"sourcesContent":["import React, {\n  useContext,\n  useEffect,\n  useState,\n  useCallback,\n  useRef,\n} from \"react\";\nimport {\n  Box,\n  Typography,\n  Button,\n  TextField,\n  Grid,\n  Modal,\n  CircularProgress,\n  ImageList,\n  IconButton,\n  styled,\n  ImageListItem,\n  FormGroup,\n  Container,\n  Link,\n  Menu,\n  Snackbar,\n  Alert,\n} from \"@mui/material\";\nimport axios from \"axios\";\nimport Message from \"../../components/Message\";\nimport MessageGroup from \"../../components/MessageGroup\";\nimport { useDropzone } from \"react-dropzone\";\nimport { saveAs } from \"file-saver\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport AttachFileIcon from \"@mui/icons-material/AttachFile\";\nimport AddBoxIcon from \"@mui/icons-material/AddBox\";\nimport AddReactionIcon from \"@mui/icons-material/AddReaction\";\nimport EmojiEmotionsIcon from \"@mui/icons-material/EmojiEmotions\";\nimport { Document, Packer, Paragraph, HeadingLevel, AlignmentType } from \"docx\";\n\nconst ICButton = styled(\n  IconButton,\n  CloseIcon\n)(({ theme }) => ({\n  \"&:hover\": {\n    CloseIcon: {\n      display: \"block\",\n    },\n  },\n}));\n\nconst LinkStyle = {\n  textDecoration: \"none\",\n  color: \"white\",\n};\n\nconst modalstyle = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: {\n    xs: \"300px\",\n    sm: \"400px\",\n  },\n  borderRadius: \"5px\",\n  boxShadow: 24,\n  p: 4,\n  height: \"max-content\",\n  color: \"white\",\n  backgroundColor: \"#404040\",\n};\n\nconst modalstyle2 = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: {\n    xs: \"300px\",\n    sm: \"540px\",\n  },\n  borderRadius: \"5px\",\n  boxShadow: 24,\n  p: 4,\n  height: \"max-content\",\n  color: \"white\",\n  backgroundColor: \"#404040\",\n};\n\nfunction ChatPage() {\n  const [value, setValue] = React.useState(\"\");\n  const [files, setFiles] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [items, setItems] = useState([]);\n  const [room, setRoom] = useState(0);\n  const [roomGroup, setRoomGroup] = useState(0);\n  const [dialog, setDialog] = useState([]);\n  const [message, setMessage] = useState();\n  const [progress, setProgress] = useState(0);\n  const [usersId, setUsersId] = useState(0);\n  const [users, setUsers] = useState();\n  const [subs, setSubs] = useState();\n  const [isDialog, setIsDialog] = useState();\n  const [roomGrp, setRoomGrp] = useState(0);\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  // setStickers(['../Stickers/sticker.webp'])\n  function importAll(r) {\n    return r.keys().map(r);\n  }\n\n  const stickers = importAll(require.context(\"../../Stickers/\"));\n\n  const openStickClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const StickClose = () => {\n    setAnchorEl(null);\n  };\n\n  const ref = useRef();\n  const handleClick = useCallback(() => {\n    ref.current.value = \"\";\n  }, []);\n\n  const handleClick2 = useCallback(() => {\n    ref.current.value = \"\";\n  }, []);\n\n  const [group, setGroup] = useState();\n  const [groupM, setGroupM] = useState();\n  const [groupN, setGroupN] = useState();\n\n  const getStat = useCallback(async () => {\n    try {\n      await axios\n        .get(`/api/group_chat/get_users/${roomGrp}`, {\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        })\n        .then((response) => setGroup(response.data));\n    } catch (e) {\n      console.log(e);\n    }\n  });\n\n  useEffect(() => {\n    getStat();\n  }, [group]);\n\n  const getStat2 = useCallback(async () => {\n    try {\n      await axios\n        .get(`/api/group_chat/get_message/${roomGrp}`, {\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        })\n        .then((response) => setGroupM(response.data));\n    } catch (e) {\n      console.log(e);\n    }\n  });\n\n  useEffect(() => {\n    getStat2();\n  }, [groupM]);\n\n  const getStat3 = useCallback(async () => {\n    try {\n      await axios\n        .get(`/api/group_chat/get_user_message/${roomGrp}`, {\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        })\n        .then((response) => setGroupN(response.data));\n    } catch (e) {\n      console.log(e);\n    }\n  });\n\n  useEffect(() => {\n    getStat3();\n  }, [groupN]);\n\n  const createStatic = async (id, name) => {\n    let us = groupN.map((n) => ` ${n.nickname}`);\n    setTimeout(() => {\n      try {\n        const doc = new Document({\n          sections: [\n            {\n              children: [\n                new Paragraph({\n                  text: `Статистика по групповому чату: \"${name}\"`,\n                  heading: HeadingLevel.HEADING_1,\n                  alignment: AlignmentType.CENTER,\n                  color: \"000000\",\n                  spacing: {\n                    after: 200,\n                  },\n                }),\n\n                new Paragraph({\n                  text: `Дата: ${date.toLocaleString(\"ru\", options)}`,\n                  heading: HeadingLevel.HEADING_1,\n                  alignment: AlignmentType.CENTER,\n                  color: \"000000\",\n                  spacing: {\n                    after: 200,\n                  },\n                }),\n\n                new Paragraph({\n                  text: `Количество собеседников: ${group.length}`,\n                  alignment: AlignmentType.LEFT,\n                  color: \"000000\",\n                }),\n\n                new Paragraph({\n                  text: `Количество сообщений: ${groupM.length}`,\n                  alignment: AlignmentType.LEFT,\n                  color: \"000000\",\n                }),\n\n                new Paragraph({\n                  text: `Участники:${groupN.map((n) => ` ${n.nickname}`)}`,\n                  alignment: AlignmentType.LEFT,\n                  color: \"000000\",\n                }),\n              ],\n            },\n          ],\n        });\n\n        Packer.toBlob(doc).then((blob) => {\n          saveAs(blob, \"Групповой чат.docx\");\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    }, 7000);\n  };\n\n  const [openUpload, setOpenUpload] = useState(false);\n  const handleOpen = () => setOpenUpload(true);\n  const handleClose = () => setOpenUpload(false);\n\n  const [openUpload2, setOpenUpload2] = React.useState(false);\n  const handleOpen2 = () => setOpenUpload2(true);\n  const handleClose2 = () => setOpenUpload2(false);\n\n  const { userId } = useContext(AuthContext);\n\n  const onDrop = useCallback((acceptedFiles) => {\n    setFiles(\n      acceptedFiles?.map((file) =>\n        Object.assign(file, {\n          preview: URL.createObjectURL(file),\n        })\n      )\n    );\n  }, []);\n\n  const {\n    getRootProps,\n    getInputProps,\n    open,\n    isDragActive,\n    isDragAccept,\n    isDragReject,\n  } = useDropzone({\n    accept:\n      \"image/jpeg, image/png, image/gif, application/pdf, application/msword, text/plain, application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n    onDrop,\n  });\n\n  const [img, setImg] = React.useState(\"\");\n\n  const handleChange = (event) => {\n    setImg(event.target.value);\n  };\n\n  const RemoD = (file) => {\n    const newFiles = [...files];\n    newFiles.splice(newFiles.indexOf(file), 1);\n    setFiles(newFiles); // update the state\n  };\n\n  const Clear = () => {\n    setFiles([]); // update the state\n  };\n\n  const getDialog = useCallback(async () => {\n    try {\n      await axios\n        .get(`/api/chat/get_dialog/${userId}`, {\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        })\n        .then((response) => setDialog(response.data));\n    } catch (e) {\n      console.log(e);\n    }\n  });\n\n  useEffect(() => {\n    getDialog();\n  }, [dialog]);\n\n  const getGroup = useCallback(async () => {\n    try {\n      await axios\n        .get(`/api/group_chat/get_group/${userId}`, {\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        })\n        .then((response) => setRoomGroup(response.data));\n      setIsLoaded(true);\n    } catch (e) {\n      console.log(e);\n    }\n  });\n\n  useEffect(() => {\n    getGroup();\n  }, [roomGroup]);\n\n  useEffect(() => {\n    fetch(`/api/auth/get_user`)\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          setUsers(result);\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n  }, []);\n\n  useEffect(() => {\n    fetch(`/api/subscribes/get_subscribes/${userId}`)\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          setSubs(result);\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n  }, []);\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setProgress((prevProgress) =>\n        prevProgress >= 100 ? 0 : prevProgress + 10\n      );\n    }, 800);\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n\n  var options = {\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\",\n    timezone: \"UTC\",\n    hour: \"numeric\",\n    minute: \"numeric\",\n    second: \"numeric\",\n  };\n\n  var date = new Date();\n\n  const [form, setForm] = useState({\n    user_from_id: userId,\n    user_to_id: \"\",\n    dialog_id: room,\n    message: \"\",\n    date_publication: date.toLocaleString(\"ru\", options),\n    search: \"\",\n    group_id: roomGrp,\n    stickers: \"\",\n    isActivity: \"\",\n  });\n\n  const openChat = (roomId, userId) => {\n    setRoom(roomId);\n    setRoomGrp(0);\n    setUsersId(userId);\n    setIsDialog(true);\n  };\n\n  const openChatGroup = (roomId, userId) => {\n    setRoomGrp(roomId);\n    setIsDialog(false);\n  };\n\n  const changeHandler = (event) => {\n    setForm({ ...form, [event.target.name]: event.target.value });\n  };\n\n  const changeHandlerClear = (event) => {\n    setForm({ ...form, [event.target.name]: event.target.value });\n  };\n\n  const sendMessage = async () => {\n    form.dialog_id = room;\n    form.user_to_id = dialog.find((item) => item.id === room).user_to_id;\n    sendNotify();\n    if (files.length === 0) {\n      try {\n        await axios.post(\n          \"/api/chat/create_message\",\n          { ...form },\n          {\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n          }\n        );\n      } catch (error) {\n        console.log(error);\n      }\n    } else createImage();\n  };\n\n  const sendNotify = async () => {\n    form.dialog_id = room;\n    form.user_to_id =\n      dialog.find((item) => item.id === room).user_from_id === userId\n        ? dialog.find((item) => item.id === room).user_to_id\n        : dialog.find((item) => item.id === room).user_from_id;\n    form.isActivity = 0;\n\n    console.log(\n      dialog.find((item) => item.id === room).user_from_id === userId\n        ? dialog.find((item) => item.id === room).user_to_id\n        : dialog.find((item) => item.id === room).user_from_id\n    );\n\n    try {\n      await axios.post(\n        \"/api/notify/create_notify\",\n        { ...form },\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const createImage = async () => {\n    let formData = new FormData();\n\n    files?.map((item) => {\n      formData.append(\"image\", item);\n      formData.append(\"id\", userId);\n    });\n\n    formData.append(\"dialog_id\", room);\n    formData.append(\n      \"user_to_id\",\n      dialog.find((item) => item.id === room).user_to_id\n    );\n    formData.append(\"user_from_id\", userId);\n    formData.append(\"message\", form.message);\n    formData.append(\"date_publication\", form.date_publication);\n    try {\n      axios.post(`/api/chat/create_message_and_image`, formData, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      Clear();\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const createStickerImage = async (ref) => {\n    form.dialog_id = room;\n    form.user_to_id = dialog.find((item) => item.id === room).user_to_id;\n    form.stickers = ref;\n\n    if (files.length === 0) {\n      try {\n        await axios.post(\n          \"/api/chat/create_sticker\",\n          { ...form },\n          {\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n          }\n        );\n      } catch (error) {\n        console.log(error);\n      }\n    } else createImage();\n  };\n\n  const createStickerGroup = async (ref) => {\n    form.group_id = roomGrp;\n    form.user_from_id = userId;\n    form.stickers = ref;\n\n    if (files.length === 0) {\n      try {\n        await axios.post(\n          \"/api/group_chat/create_sticker\",\n          { ...form },\n          {\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n          }\n        );\n      } catch (error) {\n        console.log(error);\n      }\n    } else createImage();\n  };\n\n  const sendMessageGroup = async () => {\n    form.group_id = roomGrp;\n    form.user_from_id = userId;\n\n    if (files.length === 0) {\n      try {\n        await axios.post(\n          \"/api/group_chat/create_message\",\n          { ...form },\n          {\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n          }\n        );\n      } catch (error) {\n        console.log(error);\n      }\n    } else createImageGroup();\n  };\n\n  const onKeyDown = useCallback(\n    (e) => {\n      if (e.keyCode === 13) {\n        sendMessage();\n        handleClick();\n      }\n    },\n    [sendMessage, handleClick]\n  );\n\n  const onKeyDownGroup = useCallback(\n    (e) => {\n      if (e.keyCode === 13) {\n        sendMessageGroup();\n        handleClick2();\n      }\n    },\n    [sendMessageGroup, handleClick2]\n  );\n\n  const createImageGroup = async () => {\n    let formData = new FormData();\n\n    files?.map((item) => {\n      formData.append(\"image\", item);\n      formData.append(\"id\", userId);\n    });\n\n    formData.append(\"group_id\", roomGrp);\n    formData.append(\"user_from_id\", userId);\n    formData.append(\"message\", form.message);\n    formData.append(\"date_publication\", form.date_publication);\n    try {\n      axios.post(`/api/group_chat/create_message_and_image`, formData, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      Clear();\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const createGroup = async () => {\n    setOpenUpload(false);\n    try {\n      await axios.post(\n        \"/api/group_chat/create_group\",\n        { ...form },\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const [userData, setUserData] = useState({\n    user_id: \"\",\n    group_id: roomGrp,\n  });\n\n  const inviteUser = async (usr) => {\n    userData.user_id = usr;\n    userData.group_id = roomGrp;\n\n    try {\n      await axios.post(\n        \"/api/group_chat/add_user\",\n        { ...userData },\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const [openAlert, setOpenAlert] = React.useState(false);\n\n  const handleClickAlert = (g, n) => {\n    setOpenAlert(true);\n    setTimeout(() => {\n      createStatic(g, n);\n    }, 3000);\n  };\n\n  const handleCloseAlert = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpenAlert(false);\n  };\n\n  const action = (\n    <React.Fragment>\n      <IconButton\n        size=\"small\"\n        aria-label=\"close\"\n        color=\"inherit\"\n        onClick={handleClose}\n      >\n        <CloseIcon fontSize=\"small\" />\n      </IconButton>\n    </React.Fragment>\n  );\n\n  return !isLoaded ? (\n    <CircularProgress variant=\"determinate\" value={progress} />\n  ) : (\n    <>\n      <Snackbar\n        open={openAlert}\n        autoHideDuration={6000}\n        onClose={handleCloseAlert}\n        message=\" Генерация статистики\"\n        action={action}\n      >\n        <Alert\n          onClose={handleCloseAlert}\n          severity=\"success\"\n          sx={{ width: \"100%\" }}\n        >\n          Генерация статистики, пожалуйста подождите\n        </Alert>\n      </Snackbar>\n      <Modal\n        open={openUpload}\n        onClose={handleClose}\n        sx={{\n          background:\n            \"linear-gradient(34deg, rgb(126 139 255 / 70%) 0%, rgb(255 255 255 / 70%) 100%)\",\n          color: \"#7e8bff\",\n        }}\n      >\n        <Box sx={modalstyle}>\n          <Grid\n            container\n            sx={{\n              width: \"400px\",\n              height: \"auto\",\n              flexDirection: \"column\",\n            }}\n          >\n            <Grid item>\n              <Typography\n                sx={{ fontSize: \"18px\", fontWeight: \"600\", mb: \"5px\" }}\n              >\n                Создание группы\n              </Typography>\n              <TextField\n                multiline\n                rows={1}\n                placeholder=\"Название\"\n                name=\"name_chat\"\n                onChange={changeHandler}\n                sx={{\n                  border: \"none\",\n                  outline: \"none\",\n                  reSize: \"none\",\n                  backgroundColor: \"#323232\",\n                  color: \"#fff\",\n                  width: {\n                    xs: \"300px\",\n                    sm: \"100%\",\n                  },\n                  fontSize: \"100%\",\n                  height: \"auto\",\n                  borderRadius: \"0px\",\n\n                  \".MuiOutlinedInput-root\": {\n                    borderRadius: \"0px\",\n                    borderColor: \"rgb(0 0 0 / 0%)\",\n                    color: \"white\",\n                  },\n                  \".MuiOutlinedInput-notchedOutline\": {\n                    borderRadius: \"0px\",\n                    borderColor: \"rgb(0 0 0 / 0%)\",\n                  },\n                }}\n              />\n\n              <Button\n                sx={{\n                  p: 0,\n                  height: \"40px\",\n                  textAlign: \"center\",\n                  boxShadow: \"1px 1px 5px 0px black\",\n                  m: {\n                    xs: \"10px 20px 0px 120px\",\n                    sm: \"10px 20px 0px 170px\",\n                  },\n                }}\n                variant=\"contained\"\n                component=\"span\"\n                color=\"secondary\"\n                type=\"button\"\n                onClick={createGroup}\n              >\n                <Typography\n                  variant=\"span\"\n                  sx={{\n                    color: \"white\",\n                    fontSize: 13,\n                    p: \"5px\",\n                    borderRadius: 2,\n                  }}\n                >\n                  Создать\n                </Typography>\n              </Button>\n            </Grid>\n          </Grid>\n        </Box>\n      </Modal>\n\n      <Modal\n        open={openUpload2}\n        onClose={handleClose2}\n        sx={{\n          background:\n            \"linear-gradient(34deg, rgb(126 139 255 / 70%) 0%, rgb(255 255 255 / 70%) 100%)\",\n          color: \"#7e8bff\",\n        }}\n      >\n        <Box sx={modalstyle2}>\n          <Grid\n            container\n            sx={{\n              width: {\n                xs: \"300px\",\n                sm: \"540px\",\n              },\n              height: \"auto\",\n              flexDirection: \"column\",\n            }}\n          >\n            <Grid item>\n              <h3>Добавить участника</h3>\n              <TextField\n                multiline\n                rows={1}\n                placeholder=\"Никнейм\"\n                name=\"search\"\n                onChange={changeHandler}\n                sx={{\n                  border: \"none\",\n                  outline: \"none\",\n                  reSize: \"none\",\n                  backgroundColor: \"#323232\",\n                  color: \"#fff\",\n                  width: {\n                    xs: \"300px\",\n                    sm: \"100%\",\n                  },\n                  fontSize: \"100%\",\n                  height: \"auto\",\n                  borderRadius: \"0px\",\n\n                  \".MuiOutlinedInput-root\": {\n                    borderRadius: \"0px\",\n                    borderColor: \"rgb(0 0 0 / 0%)\",\n                    color: \"white\",\n                  },\n                  \".MuiOutlinedInput-notchedOutline\": {\n                    borderRadius: \"0px\",\n                    borderColor: \"rgb(0 0 0 / 0%)\",\n                  },\n                }}\n              />\n              {users?.map((i) =>\n                form.search != \"\" ? (\n                  ~i.nickname?.indexOf(form.search) ? (\n                    <>\n                      <Typography\n                        sx={{\n                          display: \"flex\",\n                          fontWeight: 400,\n                          fontSize: \"18px\",\n                          alignItems: \"center\",\n                          color: \"white\",\n                          my: \"18px\",\n                          width: \"max-content\",\n                          flexDirection: \"column\",\n                          \"a:-webkit-any-link\": {\n                            textDecoration: \"none\",\n                            color: \"white\",\n                          },\n                        }}\n                      >\n                        <Grid container sx={{ alignItems: \"center\" }}>\n                          <Grid\n                            item\n                            sx={{\n                              display: \"flex\",\n                              alignItems: \"center\",\n                              width: {\n                                xs: \"150px\",\n                                sm: \"250px\",\n                              },\n                            }}\n                          >\n                            <Link style={LinkStyle} to={`/user/${i.user_id}`}>\n                              {i.nickname}\n                            </Link>\n                          </Grid>\n                          <Grid item sx={{ height: \"35px\" }}>\n                            <Button\n                              sx={{\n                                p: 0,\n                                ml: {\n                                  xs: \"50px\",\n                                  sm: \"195px\",\n                                },\n                                height: \"40px\",\n                                textAlign: \"center\",\n                                boxShadow: \"1px 1px 5px 0px black\",\n                              }}\n                              variant=\"contained\"\n                              component=\"span\"\n                              color=\"secondary\"\n                              type=\"button\"\n                              onClick={() => inviteUser(i.id)}\n                            >\n                              <Typography\n                                variant=\"span\"\n                                sx={{\n                                  color: \"white\",\n                                  fontSize: 13,\n                                  p: \"5px\",\n                                  borderRadius: 2,\n                                }}\n                              >\n                                Пригласить\n                              </Typography>\n                            </Button>\n                          </Grid>\n                        </Grid>\n                      </Typography>\n                    </>\n                  ) : null\n                ) : null\n              )}\n\n              {subs?.map((i) =>\n                users?.map((usr) =>\n                  usr.id === i.subscribes_id ? (\n                    <>\n                      <Typography\n                        sx={{\n                          display: \"flex\",\n                          fontWeight: 400,\n                          fontSize: \"18px\",\n                          alignItems: \"center\",\n                          color: \"white\",\n                          my: \"18px\",\n                          width: \"max-content\",\n                          flexDirection: \"column\",\n                          \"a:-webkit-any-link\": {\n                            textDecoration: \"none\",\n                            color: \"white\",\n                          },\n                        }}\n                      >\n                        <Grid container sx={{ alignItems: \"center\" }}>\n                          <Grid\n                            item\n                            sx={{\n                              display: \"flex\",\n                              alignItems: \"center\",\n                              width: {\n                                xs: \"150px\",\n                                sm: \"250px\",\n                              },\n                            }}\n                          >\n                            <Link style={LinkStyle} to={`/user/${i.user_id}`}>\n                              {usr.nickname}\n                            </Link>\n                          </Grid>\n                          <Grid item sx={{ height: \"35px\" }}>\n                            <Button\n                              sx={{\n                                p: 0,\n                                ml: {\n                                  xs: \"50px\",\n                                  sm: \"195px\",\n                                },\n                                height: \"40px\",\n                                textAlign: \"center\",\n                                boxShadow: \"1px 1px 5px 0px black\",\n                              }}\n                              variant=\"contained\"\n                              component=\"span\"\n                              color=\"secondary\"\n                              type=\"button\"\n                              onClick={() => inviteUser(usr.id)}\n                            >\n                              <Typography\n                                variant=\"span\"\n                                sx={{\n                                  color: \"white\",\n                                  fontSize: 13,\n                                  p: \"5px\",\n                                  borderRadius: 2,\n                                }}\n                              >\n                                Пригласить\n                              </Typography>\n                            </Button>\n                          </Grid>\n                        </Grid>\n                      </Typography>\n                    </>\n                  ) : null\n                )\n              )}\n            </Grid>\n          </Grid>\n        </Box>\n      </Modal>\n\n      <Box container id=\"msg_container\">\n        <Grid\n          container\n          sx={{\n            ml: {\n              xs: \"0px\",\n              sm: \"260px\",\n            },\n            mt: {\n              xs: \"55px\",\n              sm: \"100px\",\n            },\n            width: \"1500px\",\n            height: \"50px\",\n            flexDirection: \"row\",\n          }}\n        >\n          <Grid\n            item\n            sx={{\n              backgroundColor: \"#2e3035\",\n              borderRight: \"1px solid #232326\",\n              height: \"100%\",\n              flex: \"0 1 55px\",\n            }}\n          >\n            <Grid\n              item\n              sx={{\n                display: \"flex\",\n                width: {\n                  xs: \"130px\",\n                  sm: \"465px\",\n                },\n                borderBottom: \"1px solid #232326\",\n                height: \"50px\",\n              }}\n            >\n              <Typography\n                sx={{\n                  height: \"100%\",\n                  color: \"white\",\n                  width: \"425px\",\n                  mt: \"15px\",\n\n                  textAlign: \"center\",\n                }}\n              >\n                Диалоги\n              </Typography>\n              <Button sx={{ minWidth: \"30px\" }} onClick={() => handleOpen()}>\n                <AddBoxIcon sx={{ fontSize: \"35px\" }} />\n              </Button>\n            </Grid>\n          </Grid>\n          <Grid\n            item\n            sx={{\n              backgroundColor: \"#2e3035\",\n              borderBottom: \"1px solid #232326\",\n              borderRight: \"1px solid #232326\",\n              padding: \"0 20px\",\n              height: \"100%\",\n              flex: \"0 1 55px\",\n            }}\n          >\n            <Box>\n              <Typography\n                sx={{\n                  height: \"100%\",\n                  color: \"white\",\n                  width: {\n                    xs: \"220px\",\n                    sm: \"893px\",\n                  },\n                  m: \"13px 0px\",\n                }}\n              >\n                {roomGrp ? (\n                  <>\n                    {roomGroup?.map((i) =>\n                      i.group_id === roomGrp ? (\n                        <Typography\n                          sx={{\n                            height: \"100%\",\n                            mt: \"15px\",\n                            color: \"white\",\n                            m: \"-13px 0px\",\n                          }}\n                          //onClick={() => openChatGroup(i.group_id, userId)}\n                        >\n                          {i.name_chat}\n                          <Button\n                            sx={{ minWidth: \"30px\", ml: \"5px\" }}\n                            onClick={() => handleOpen2()}\n                          >\n                            <AddReactionIcon sx={{ fontSize: \"35px\" }} />\n                          </Button>\n                          {group.length === 0 ? null : groupM.length ===\n                            0 ? null : groupN.length === 0 ? null : (\n                            <Button\n                              sx={{ minWidth: \"30px\", ml: \"5px\" }}\n                              onClick={() =>\n                                handleClickAlert(i.group_id, i.name_chat)\n                              }\n                            >\n                              Статистика\n                            </Button>\n                          )}\n                        </Typography>\n                      ) : null\n                    )}\n                  </>\n                ) : (\n                  <>\n                    {users?.map((usr) =>\n                      usr.id === usersId ? (\n                        <Typography\n                          sx={{ color: \"white\", display: \"inline-block\" }}\n                        >\n                          {usr.nickname}\n                        </Typography>\n                      ) : null\n                    )}\n                  </>\n                )}\n              </Typography>\n            </Box>\n          </Grid>\n        </Grid>\n        <Grid\n          container\n          id=\"msg_list\"\n          sx={{\n            margin: \"0px auto 0 -700px\",\n            width: {\n              xs: \"392px\",\n              sm: \"1398px\",\n            },\n            position: \"absolute\",\n            right: \"auto\",\n            ml: {\n              xs: \"0px\",\n              sm: \"260px\",\n            },\n          }}\n        >\n          <Grid\n            item\n            sx={{\n              backgroundColor: \"#212124\",\n              height: \"100%\",\n              width: \"80px\",\n              float: \"left\",\n              display: \"flex\",\n              flexFlow: \"column\",\n              top: \"0\",\n              right: \"0\",\n            }}\n            xs={4}\n          >\n            {dialog?.map((item) =>\n              users?.map((usr) =>\n                usr.id === item.user_to_id && usr.id != userId ? (\n                  <Box\n                    sx={{\n                      backgroundColor: \"#2e3035\",\n                      borderBottom: \"1px solid #232326\",\n                      borderRight: \"1px solid #232326\",\n                      padding: \"0 20px\",\n                      height: \"auto\",\n                      flex: \"0 1 55px\",\n                    }}\n                  >\n                    <Typography\n                      sx={{ height: \"100%\", mt: \"15px\", color: \"white\" }}\n                      onClick={() => openChat(item.id, usr.id)}\n                    >\n                      {usr.nickname}\n                    </Typography>\n                  </Box>\n                ) : null\n              )\n            )}\n\n            {roomGroup?.map((i) => (\n              <Box\n                sx={{\n                  backgroundColor: \"#2e3035\",\n                  borderBottom: \"1px solid #232326\",\n                  borderRight: \"1px solid #232326\",\n                  padding: \"0 20px\",\n                  height: \"auto\",\n                  flex: \"0 1 55px\",\n                }}\n              >\n                <Typography\n                  sx={{ height: \"100%\", mt: \"15px\", color: \"white\" }}\n                  onClick={() => openChatGroup(i.group_id, userId)}\n                >\n                  {i.name_chat}\n                </Typography>\n              </Box>\n            ))}\n\n            {dialog?.map((item) =>\n              users?.map((usr) =>\n                usr.id === item.user_from_id && usr.id != userId ? (\n                  <Box\n                    sx={{\n                      backgroundColor: \"#2e3035\",\n                      borderBottom: \"1px solid #232326\",\n                      borderRight: \"1px solid #232326\",\n                      padding: \"0 20px\",\n                      height: \"auto\",\n                      flex: \"0 1 55px\",\n                    }}\n                  >\n                    <Typography\n                      sx={{ height: \"100%\", mt: \"15px\", color: \"white\" }}\n                      onClick={() => openChat(item.id, usr.id)}\n                    >\n                      {usr.nickname}\n                    </Typography>\n                  </Box>\n                ) : null\n              )\n            )}\n          </Grid>\n          {isDialog ? (\n            <Grid\n              item\n              xs={8}\n              sx={{\n                backgroundColor: \"#E1E1E1\",\n                height: {\n                  xs: \"650px\",\n                  sm: \"810px\",\n                },\n              }}\n            >\n              {room === 0 ? null : (\n                <>\n                  <Grid\n                    item\n                    sx={{\n                      position: \"relative\",\n                      boxSizing: \"border-box\",\n                      height: {\n                        xs: \"624px\",\n                        sm: \"744px\",\n                      },\n                      overflowY: \"auto\",\n                    }}\n                  >\n                    <Message todo={room} />\n                  </Grid>\n                  <Container\n                    sx={{\n                      width: \"100%\",\n                      backgroundColor: {\n                        xs: \"#dddddd\",\n                        sm: \"#c3c3c38f\",\n                      },\n                      display: \"inline-block\",\n                      height: \"auto\",\n                    }}\n                  >\n                    {files.map((file) => (\n                      <Grid\n                        key={file.path}\n                        item\n                        sx={{\n                          width: \"max-content\",\n                          display: \"inline-block\",\n                          ml: \"10px\",\n                          height: \"auto\",\n                          pt: \"8px\",\n                          pb: \"4px\",\n                        }}\n                      >\n                        <img width={50} height={50} src={file.preview} />\n\n                        <ICButton\n                          onClick={() => RemoD(file)}\n                          sx={{ p: 0, ml: \"-12px\", mt: \"-90px\" }}\n                        >\n                          <CloseIcon\n                            sx={{ fill: \"red\", verticalAlign: \"middle\" }}\n                          />\n                        </ICButton>\n                      </Grid>\n                    ))}\n                  </Container>\n                  <Grid item>\n                    <FormGroup\n                      sx={{\n                        display: \"flex\",\n                        height: \"55px\",\n                        justifyContent: \"center\",\n                      }}\n                    >\n                      <TextField\n                        multiline\n                        rows={1}\n                        placeholder=\"Написать..\"\n                        name=\"message\"\n                        onChange={changeHandler}\n                        inputRef={ref}\n                        onKeyDown={onKeyDown}\n                        sx={{\n                          border: \"none\",\n                          outline: \"none\",\n                          reSize: \"none\",\n                          backgroundColor: \"#323232\",\n                          color: \"#fff\",\n                          width: \"100%\",\n                          fontSize: \"100%\",\n                          height: \"auto\",\n                          borderRadius: \"0px\",\n\n                          \".MuiOutlinedInput-root\": {\n                            borderRadius: \"0px\",\n                            borderColor: \"rgb(0 0 0 / 0%)\",\n                            color: \"white\",\n                          },\n                          \".MuiOutlinedInput-notchedOutline\": {\n                            borderRadius: \"0px\",\n                            borderColor: \"rgb(0 0 0 / 0%)\",\n                          },\n                        }}\n                      />\n\n                      <input\n                        type=\"file\"\n                        hidden\n                        name=\"image\"\n                        id=\"file\"\n                        accept=\"image/gif , image/png , image/jpeg\"\n                        {...getInputProps()}\n                      />\n                      <Button\n                        sx={{\n                          height: \"36px\",\n                          width: \"41px\",\n                          minWidth: \"40px\",\n                          textAlign: \"center\",\n                          position: \"absolute\",\n                          right: \"0\",\n                          mr: {\n                            xs: \"120px\",\n                            sm: \"150px\",\n                          },\n                          zIndex: 2,\n                        }}\n                        variant=\"contained\"\n                        component=\"span\"\n                        aria-haspopup=\"true\"\n                        onClick={openStickClick}\n                      >\n                        <EmojiEmotionsIcon />\n                      </Button>\n                      <Menu\n                        elevation={0}\n                        getContentAnchorEl={null}\n                        anchorOrigin={{\n                          vertical: \"bottom\",\n                          horizontal: \"center\",\n                        }}\n                        transformOrigin={{\n                          vertical: \"top\",\n                          horizontal: \"center\",\n                        }}\n                        id=\"customized-menu\"\n                        anchorEl={anchorEl}\n                        keepMounted\n                        open={Boolean(anchorEl)}\n                        onClose={StickClose}\n                        sx={{ \".MuiMenu-list\": { background: \"#000000ed\" } }}\n                      >\n                        <ImageList\n                          sx={{\n                            width: 365,\n                            height: 450,\n                            justifyItems: \"center\",\n                            \"&::-webkit-scrollbar\": {\n                              width: 5,\n                              borderRadius: \"5px\",\n                            },\n                            \"&::-webkit-scrollbar-thumb\": {\n                              backgroundColor: \"rgb(112 112 112)\",\n                              outline: \"1px solid black\",\n                              borderRadius: \"5px\",\n                            },\n                          }}\n                          cols={3}\n                          rowHeight={100}\n                          colWidth={100}\n                        >\n                          {stickers.map((item) => (\n                            <ImageListItem key={item.img}>\n                              <Box\n                                component=\"img\"\n                                a\n                                onClick={() =>\n                                  createStickerImage(item.slice(21, 23))\n                                }\n                                sx={{\n                                  objectFit: \"contain\",\n                                  height: \"100px\",\n                                  display: \"inline-block\",\n                                  maxWidth: 100,\n                                  width: \"100px\",\n                                  overflow: \"hidden\",\n                                }}\n                                src={`${item}?fit=cover&auto=format`}\n                                alt={item}\n                              />\n                            </ImageListItem>\n                          ))}\n                        </ImageList>\n                      </Menu>\n                      <Button\n                        sx={{\n                          height: \"36px\",\n                          width: \"41px\",\n                          minWidth: \"40px\",\n                          textAlign: \"center\",\n                          position: \"absolute\",\n                          right: \"0\",\n                          mr: {\n                            xs: \"77px\",\n                            sm: \"100px\",\n                          },\n                          zIndex: 2,\n                        }}\n                        variant=\"contained\"\n                        component=\"span\"\n                        rows={1}\n                        onClick={open}\n                      >\n                        <AttachFileIcon />\n                      </Button>\n                      <Button\n                        variant=\"contained\"\n                        component=\"span\"\n                        color=\"secondary\"\n                        onClick={() => {\n                          sendMessage();\n                          handleClick();\n                        }}\n                        sx={{\n                          height: \"36px\",\n                          width: \"71px\",\n                          textAlign: \"center\",\n                          position: \"absolute\",\n                          right: \"0\",\n                          mr: {\n                            xs: \"4px\",\n                            sm: \"16px\",\n                          },\n                        }}\n                      >\n                        <Typography\n                          sx={{\n                            fontSize: \"12px\",\n                            lineHeight: \"12px\",\n                            textTransform: \"capitalize\",\n                          }}\n                        >\n                          Отправить\n                        </Typography>\n                      </Button>\n                    </FormGroup>\n                  </Grid>\n                </>\n              )}\n            </Grid>\n          ) : (\n            //Групповушка\n            <Grid\n              item\n              xs={8}\n              sx={{\n                backgroundColor: \"#E1E1E1\",\n                height: {\n                  xs: \"650px\",\n                  sm: \"810px\",\n                },\n              }}\n            >\n              {roomGrp === 0 ? null : (\n                <>\n                  <Grid\n                    item\n                    sx={{\n                      position: \"relative\",\n                      boxSizing: \"border-box\",\n                      height: {\n                        xs: \"624px\",\n                        sm: \"744px\",\n                      },\n                      overflowY: \"auto\",\n                    }}\n                  >\n                    <MessageGroup todo={roomGrp} />\n                  </Grid>\n                  <Container\n                    sx={{\n                      width: \"100%\",\n                      backgroundColor: {\n                        xs: \"#dddddd\",\n                        sm: \"#c3c3c38f\",\n                      },\n                      display: \"inline-block\",\n                      height: \"auto\",\n                    }}\n                  >\n                    {files.map((file) => (\n                      <Grid\n                        key={file.path}\n                        item\n                        sx={{\n                          width: \"max-content\",\n                          display: \"inline-block\",\n                          ml: \"10px\",\n                          height: \"auto\",\n                          pt: \"8px\",\n                          pb: \"4px\",\n                        }}\n                      >\n                        <img width={50} height={50} src={file.preview} />\n\n                        <ICButton\n                          onClick={() => RemoD(file)}\n                          sx={{ p: 0, ml: \"-12px\", mt: \"-90px\" }}\n                        >\n                          <CloseIcon\n                            sx={{ fill: \"red\", verticalAlign: \"middle\" }}\n                          />\n                        </ICButton>\n                      </Grid>\n                    ))}\n                  </Container>\n                  <Grid item>\n                    <FormGroup\n                      sx={{\n                        display: \"flex\",\n                        height: \"55px\",\n                        justifyContent: \"center\",\n                      }}\n                    >\n                      <TextField\n                        multiline\n                        rows={1}\n                        placeholder=\"Написать..\"\n                        name=\"message\"\n                        onChange={changeHandler}\n                        inputRef={ref}\n                        onKeyDown={onKeyDownGroup}\n                        sx={{\n                          border: \"none\",\n                          outline: \"none\",\n                          reSize: \"none\",\n                          backgroundColor: \"#323232\",\n                          color: \"#fff\",\n                          width: \"100%\",\n                          fontSize: \"100%\",\n                          height: \"auto\",\n                          borderRadius: \"0px\",\n\n                          \".MuiOutlinedInput-root\": {\n                            borderRadius: \"0px\",\n                            borderColor: \"rgb(0 0 0 / 0%)\",\n                            color: \"white\",\n                          },\n                          \".MuiOutlinedInput-notchedOutline\": {\n                            borderRadius: \"0px\",\n                            borderColor: \"rgb(0 0 0 / 0%)\",\n                          },\n                        }}\n                      />\n\n                      <input\n                        type=\"file\"\n                        hidden\n                        name=\"image\"\n                        id=\"file\"\n                        accept=\"image/gif , image/png , image/jpeg\"\n                        {...getInputProps()}\n                      />\n                      <Button\n                        sx={{\n                          height: \"36px\",\n                          width: \"41px\",\n                          minWidth: \"40px\",\n                          textAlign: \"center\",\n                          position: \"absolute\",\n                          right: \"0\",\n                          mr: {\n                            xs: \"120px\",\n                            sm: \"150px\",\n                          },\n                          zIndex: 2,\n                        }}\n                        variant=\"contained\"\n                        component=\"span\"\n                        aria-haspopup=\"true\"\n                        onClick={openStickClick}\n                      >\n                        <EmojiEmotionsIcon />\n                      </Button>\n                      <Menu\n                        elevation={0}\n                        getContentAnchorEl={null}\n                        anchorOrigin={{\n                          vertical: \"bottom\",\n                          horizontal: \"center\",\n                        }}\n                        transformOrigin={{\n                          vertical: \"top\",\n                          horizontal: \"center\",\n                        }}\n                        id=\"customized-menu\"\n                        anchorEl={anchorEl}\n                        keepMounted\n                        open={Boolean(anchorEl)}\n                        onClose={StickClose}\n                        sx={{ \".MuiMenu-list\": { background: \"#000000ed\" } }}\n                      >\n                        <ImageList\n                          sx={{\n                            width: 365,\n                            height: 450,\n                            justifyItems: \"center\",\n                            \"&::-webkit-scrollbar\": {\n                              width: 5,\n                              borderRadius: \"5px\",\n                            },\n                            \"&::-webkit-scrollbar-thumb\": {\n                              backgroundColor: \"rgb(112 112 112)\",\n                              outline: \"1px solid black\",\n                              borderRadius: \"5px\",\n                            },\n                          }}\n                          cols={3}\n                          rowHeight={100}\n                          colWidth={100}\n                        >\n                          {stickers.map((item) => (\n                            <ImageListItem key={item.img}>\n                              <Box\n                                onClick={() =>\n                                  createStickerGroup(item.slice(21, 23))\n                                }\n                                component=\"img\"\n                                a\n                                sx={{\n                                  objectFit: \"contain\",\n                                  height: \"100px\",\n                                  display: \"inline-block\",\n                                  maxWidth: 100,\n                                  width: \"100px\",\n                                  overflow: \"hidden\",\n                                }}\n                                src={`${item}?fit=cover&auto=format`}\n                                alt={item}\n                              />\n                            </ImageListItem>\n                          ))}\n                        </ImageList>\n                      </Menu>\n                      <Button\n                        sx={{\n                          height: \"36px\",\n                          width: \"41px\",\n                          minWidth: \"40px\",\n                          textAlign: \"center\",\n                          position: \"absolute\",\n                          right: \"0\",\n                          mr: {\n                            xs: \"77px\",\n                            sm: \"100px\",\n                          },\n                          zIndex: 2,\n                        }}\n                        variant=\"contained\"\n                        component=\"span\"\n                        rows={1}\n                        onClick={open}\n                      >\n                        <AttachFileIcon />\n                      </Button>\n                      <Button\n                        variant=\"contained\"\n                        component=\"span\"\n                        color=\"secondary\"\n                        onClick={() => {\n                          sendMessageGroup();\n                          handleClick2();\n                        }}\n                        sx={{\n                          height: \"36px\",\n                          width: \"71px\",\n                          textAlign: \"center\",\n                          position: \"absolute\",\n                          right: \"0\",\n                          mr: {\n                            xs: \"4px\",\n                            sm: \"16px\",\n                          },\n                        }}\n                      >\n                        <Typography\n                          sx={{\n                            fontSize: \"12px\",\n                            lineHeight: \"12px\",\n                            textTransform: \"capitalize\",\n                          }}\n                        >\n                          Отправить\n                        </Typography>\n                      </Button>\n                    </FormGroup>\n                  </Grid>\n                </>\n              )}\n            </Grid>\n          )}\n        </Grid>\n      </Box>\n    </>\n  );\n}\n\nexport default ChatPage;\n\n//  {\n//    message.map((item) =>\n//       item.user_from_id == userId ? (<h1>{item.message}</h1>) : (<h3>{item.message}</h3>)\n//    )\n//}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}